x = [1,2,1,2,1,2,1,2,1]
y = [1,2,1,2,1,1,1]
for i in x:
    if i == 1:
        x.remove(i)
print(x)
for i in y:
    if i == 1:
        y.remove(i)
print(y)
'''循环结束第二组只是删除了一部分1，出现这个问题的原因是列表的自动内存管理功能。
在删除/增加列表元素时，Python会自动对列表内存进行收缩并移动列表元素以保证元素之
间没有空隙,该元素位置后面所有元素的索引改变。
'''
'''正确代码'''
x = [1,2,1,2,1,1,1]
for i in x[::]:          #切片
     if i == 1:
         x.remove(i)
'''或者'''
x = [1, 2, 1, 2, 1, 1, 1]
for i in range(len(x) - 1, -1, -1):   #左闭右开
    if x[i] == 1:
        del x[i]

'''使用列表推导式实现嵌套列表的平铺'''
vec = [[1,2,3], [4,5,6], [7,8,9]]
print([num for elem in vec for num in elem])
'''相当于'''
vec = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
result = []
for elem in vec:
    for num in elem:
        result.append(num)
print(result)
'''不使用列表推导式'''
vec = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
print(sum(vec, []))

import random
x = [random.randint(1,100) for i in range(10)] #生成范围在1-100的随机数
print(x)
x = [random.randint(1,10) for i in range(10)]
y = [random.randint(1,10) for i in range(10)]
import operator
print(sum(map(operator.mul, x, y)))             #向量内积
print(sum((i*j for i, j in zip(x, y))))         #向量内积
print(list(map(operator.add, x, y)))          #两个等长的向量对应元素相加


